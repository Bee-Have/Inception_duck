version : '3'

services:

  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
        - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    container_name: mariadb
    image: mariadb
    ports:
      - '3306:3306'
    volumes:
      - ./mysql_volume:/var/lib/mysql
    networks:
      - amarini-network
    restart: always

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
        - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
        - DB_HOST=${DB_HOST}
        - MYSQL_USER=${MYSQL_USER}
        - WP_PATH=${WP_PATH}
    container_name: wordpress
    image: wordpress
    ports:
      - '9000:9000'
    volumes:
      - ./wordpress_volume:/var/www/html
    depends_on:
      - mariadb
    networks:
      - amarini-network
    restart: always

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    image: nginx
    ports:
      - '8080:8080'
    volumes:
      - ./wordpress_volume:/var/www/html
    depends_on:
      - wordpress
    networks:
      - amarini-network
    restart: unless-stopped

networks:
  amarini-network:

volumes:
  mysql_volume:
    driver: local
    driver_opts:
      type: none
      device: ${MYSQL_VOLUME_PATH}
      o: bind
  wordpress_volume:
    driver: local
    driver_opts:
      type: none
      device: ${WP_VOLUME_PATH}
      o: bind