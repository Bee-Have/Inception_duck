version : '3'

services:

  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
        - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_PATH=${MYSQL_PATH}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mariadb_volume:${MYSQL_PATH}
    networks:
      - backend
    restart: always

  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
      args:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ADMIN_USER=${MYSQL_ADMIN_USER}
        - MYSQL_ADMIN_PASSWORD=${MYSQL_ADMIN_PASSWORD}
        - DB_HOST=${DB_HOST}
        - MYSQL_USER=${MYSQL_USER}
        - WP_PATH=${WP_PATH}
    ports:
      - '9000:9000'
    volumes:
      - wordpress_volume:${WP_PATH}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ADMIN_USER: ${MYSQL_ADMIN_USER}
      MYSQL_ADMIN_PASSWORD: ${MYSQL_ADMIN_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      WP_PATH: ${WP_PATH}
      DB_HOST: ${DB_HOST}
    depends_on:
      - mariadb
    networks:
      - frontend
      - backend
    command: bash -c "/run/wp_start.sh"
    restart: always

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
      args:
        - DOMAIN=${DOMAIN}
        - WP_PATH=${WP_PATH}
    ports:
      - '443:443'
    volumes:
      - wordpress_volume:${WP_PATH}
    depends_on:
      - wordpress
    networks:
      - frontend
    restart: unless-stopped

networks:
  frontend:
  backend:

volumes:
  wordpress_volume:
    driver: 'local'
    driver_opts:
      type: 'none'
      device: '${WP_VOLUME}'
      o: 'bind'
  mariadb_volume:
    driver: 'local'
    driver_opts:
      type: 'none'
      device: '${MYSQL_VOLUME}'
      o: 'bind'